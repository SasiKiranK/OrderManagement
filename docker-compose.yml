version: '3.9'

services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    restart: always
    container_name: redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 3

  mongo:
    image: mongo:7
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db
  
  mongo-express:
    image: mongo-express
    container_name: mongo-express
    ports:
      - "8091:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin
    depends_on:
      - mongo

  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
  #   environment:
  #     - discovery.type=single-node
  #     - xpack.security.enabled=false
  #   ports:
  #     - "9200:9200"

  # zookeeper:
  #   image: confluentinc/cp-zookeeper:7.6.0
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181

  # kafka:
  #   image: confluentinc/cp-kafka:7.6.0
  #   depends_on:
  #     - zookeeper
  #   environment:
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #   ports:
  #     - "9092:9092"

  user-service:
    build: ./user-service
    volumes:
      - ./user-service:/app
      - ~/.m2:/root/.m2
    environment:
      # SPRING_PROFILES_ACTIVE: prod
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/orderflow
      SPRING_PROFILES_ACTIVE: dev
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
    ports:
      - "8086:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # cart-service:
  #   build: ./cart-service
  #   ports:
  #     - "8082:8080"
  #   depends_on:
  #     - postgres

  # order-service:
  #   build: ./order-service
  #   ports:
  #     - "8083:8080"
  #   depends_on:
  #     - postgres
      # - kafka

  product-catalog:
    build: ./product-catalog
    volumes:
      - ./product-catalog:/app
    ports:
      - "8003:8003"
    depends_on:
      - mongo
    environment:
      - MONGO_URI=mongodb://mongo:27017/
    restart: unless-stopped

  # inventory-service:
  #   build: ./inventory-service
  #   ports:
  #     - "8002:8000"
  #   depends_on:
  #     - postgres

  # notification-service:
  #   build: ./notification-service
  #   ports:
  #     - "8003:8000"
    # depends_on:
    #   - kafka

  # search-service:
  #   build: ./search-service
  #   ports:
  #     - "8004:8000"
  #   depends_on:
  #     - elasticsearch

  # admin-dashboard:
  #   build: ./admin-dashboard
  #   ports:
  #     - "8005:8000"
  #   depends_on:
  #     - postgres

volumes:
  pgdata:
  mongodata: